@using SECOM.ACS.Models

<div class="search-container">
    <div class="form-horizontal well well-sm">
        <div class="form-group">
            <label class="col-md-2 control-label">@(Html.DisplayName<EmployeeInformationViewModel>("EmployeeID"))</label>
            <div class="col-md-4">
                @(Html.Kendo().AutoComplete().Name("employeeID")
                    .DataSource(ds =>
                        ds.Read(r =>
                            r.Action("FindEmployeesByEmployeeID", "Employee")
                            .Type(HttpVerbs.Post)
                        )
                        .ServerFiltering(true)
                    )
                    .Filter(FilterType.Contains)
                    .DataTextField("EmployeeID")
                    .MinLength(2)
                    .HtmlAttributes(new { style = "width:100%" })
                )
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">@(Html.DisplayName<EmployeeInformationViewModel>("EmployeeName"))</label>
            <div class="col-md-4">
                @(Html.Kendo().AutoComplete()
                    .Name("employeeName")
                    .DataSource(ds =>
                        ds.Read(r =>
                            r.Action("FindEmployeesByEmployeeName", "Employee")
                            .Type(HttpVerbs.Post)
                        )
                        .ServerFiltering(true)
                    )
                    .DataTextField("EmployeeName")
                    .MinLength(2)
                    .HtmlAttributes(new { style = "width:100%" })
                )
            </div>
            <label class="col-md-2 control-label">@(Html.DisplayName<EmployeeInformationViewModel>("Department"))</label>
            <div class="col-md-4">
                @(Html.Kendo().DropDownList()
                    .Name("department")
                    .DataSource(ds =>
                        ds.Read(r =>
                            r.Url("/api/departments/list")
                        )
                        .ServerFiltering(false)
                    )
                    .DataTextField("Name")
                    .DataValueField("Value")
                    .OptionLabel(WidgetResource.AllOptions)
                    .MinLength(2)
                    .HtmlAttributes(new { style = "width:100%" })
                )
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">@(Html.DisplayName<EmployeeInformationViewModel>("Position"))</label>
            <div class="col-md-4">
                @(Html.Kendo().DropDownList()
                    .Name("position")
                    .DataSource(ds =>
                        ds.Read(r => 
                            r.Url("/api/positions/list")
                        )
                        .ServerFiltering(false)
                    )
                    .DataTextField("Name")
                    .DataValueField("Value")
                    .OptionLabel(WidgetResource.AllOptions)
                    .MinLength(2)
                    .HtmlAttributes(new { style = "width:100%" })
                )
            </div>
        </div>
        <div class="row">
            <div class="col-md-offset-2 col-md-10">
                <div class="button-container">
                    @Html.SearchButton(htmlAttributes: new { @class = "k-primary k-search" })
                    @Html.ClearButton(htmlAttributes: new { @class = "k-button-warning k-clear" })
                </div>
            </div>
        </div>
    </div>
</div>
<h2><i class="fa fa-th-list"></i>  @ViewResource.InquiryEmployeeList_Title</h2>
<div class="grid-cotnainer">
    @(Html.Kendo().Grid<EmployeeDataViewModel>()
        .Name("grid")
            .Scrollable()
            .AutoBind(false)
            .Pageable(p => p
                .PageSizes(true)
                .Refresh(true)
                .ButtonCount(5)
            )
            .HtmlAttributes(new { style = "height:500px" })
            .Columns(c =>
            {
                c.Template(t => { })
                .ClientTemplate("#=renderEdit(data)#")
                .Width(50);
                c.Template(t => { })
                    .ClientTemplate("#=_rowNo#")
                    .Title(WidgetResource.Grid_Column_No)
                    .HtmlAttributes(new { @class = "text-right" })
                    .Width(60);
                c.Bound(f => f.EmployeeID)
                    .Width(150);
                c.Bound(f => f.EmployeeName);
                c.Bound(f => f.Email);
                c.Bound(f => f.PositionName)
                    .Width(200);
                c.Bound(f => f.DepartmentName)
                    .Width(200);
            })
            .DataSource(ds => ds
                .Custom().Transport(t =>
                {
                    t.Read(r => r.Action("List", "Employee")
                        .Type(HttpVerbs.Post)
                        .Data("getSearchCriteria")
                        .DataType("json"));
                })
    .Schema(s =>
    {
        s.Data("Data");
        s.Total("Total");
        s.Errors("Errors");
        s.Model(m =>
        {
            m.Id(f => f.EmployeeID);
            m.Field(f => f.EmployeeName);
            m.Field(f => f.PositionName);
            m.Field(f => f.DepartmentName);
        });
    })
    .PageSize(20)
    .ServerFiltering(true)
    .ServerPaging(true)
    .ServerSorting(true)
    .Events(e =>
    {
        e.RequestStart("dataSourceRequestStart");
        e.RequestEnd("dataSourceRequestEnd");
        e.Error("dataSourceError");
    })
    )
    .Events(ev => { ev.DataBinding("gridBinding"); })

    )

</div>

@section scripts{
    <script type="text/javascript">

        var uiState = new AppUIState();
        var grid;

        $(document).ready(function () {
            app.initPage();
            grid = $("#grid").data("kendoGrid");
            uiState.register('ajax', ['.k-button']);

            $(".k-search").on("click", function (e) {
                e.preventDefault();
                grid.dataSource.page(1);
            });

            $(".k-clear").on("click", function (e) {
                e.preventDefault();
                app.ui.clear(["#grid", "#employeeID", "#employeeName", "#position", "#department"]);
            });
        });

        function searchButtonClicked(e) {
            e.preventDefault();
            grid.dataSource.page(1);
        }

        function dataSourceRequestStart(e) {
            uiState.busy("ajax", true);
        }

        function dataSourceRequestEnd(e) {
            uiState.busy("ajax", false);
            app.ui.handleDataSourceRequestEnd(e);
            app.ui.handleGridDataSourceRequestEnd(e, grid);
        }

        function dataSourceError(e) {
            var result = app.ui.handleDataSourceError(e);
            if (result.handled) {
                $(".k-edit-form-error-message").html(result.message).show();
            }
        }

        function popupEditActivate(e) {
            this.wrapper.find("input[name='Name']").focus();
        }

        function getSearchCriteria() {
            return {
                criteria: {
                    EmployeeID: $("#employeeID").data("kendoAutoComplete").value(),
                    EmployeeName: $("#employeeName").data("kendoAutoComplete").value(),
                    Department: $("#department").data("kendoDropDownList").value(),
                    Position: $("#position").data("kendoDropDownList").value(),
                }
            };
        }

        function gridBinding(e) {
            app.ui.initGridRowNo(this);
        }

        function renderEdit(data) {
            return "<a href = \" @Url.Action("Edit", "Employee")" + "/" + data.EmployeeID + "\"target=\"_blank\" class=\"k-button k-primary k-button-sm k-grid-view\"><span class=\"k-icon k-i-edit\"></a>";
        }

    </script>
}
